.navbar {
  display: flex;
  align-items: center;
  background: #F44336;
  position: fixed;
  top: 0;
  z-index: 1;

  &-button {
    background-color: inherit;
  }

  &-content {
    padding: 0;
    flex: 1;
    justify-content: space-between;
    flex-direction: row;
    display: flex;
  }

  &-content__item {
    margin: 0 10px;
  }
}

.toogle-button {
  cursor: pointer;
  display: flex;
  color: #f5f5f5;
  border: none;
  margin-right: 20px;
  margin: 0;
  background: inherit;
}

.sidenav {
  position: fixed;
  top: 64px;
  bottom: 0;
  left: 0;
  right: 0;

  &-content {
    width: 240px;
  }

  &-content__item {
    color: rgba(255, 255, 255, 0.7);
    text-decoration: none;
  }

  &-content__item:hover {
    text-decoration: none;
  }
}

@media (max-width: 599px) {
  .sidenav-content {
    top: 56px;
  }
}

//
// ::ng-deep .mat-drawer-content {
//   overflow: visible !important;
// }

.example-container {
  display: flex;
  flex-direction: column;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

.example-is-mobile .example-toolbar {
  position: fixed;
  /* Make sure the toolbar will stay on top of the content as it scrolls past. */
  z-index: 2;
}

h1.example-app-name {
  margin-left: 8px;
}

.example-sidenav-container {
  /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This
     causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */
  flex: 1;
}

.example-is-mobile .example-sidenav-container {
  /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the
     `<body>` to be our scrolling element for mobile layouts. */
  flex: 1 0 auto;
}
